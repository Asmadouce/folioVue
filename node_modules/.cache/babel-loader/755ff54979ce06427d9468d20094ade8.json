{"remainingRequest":"/var/www/work/foliovue/node_modules/babel-loader/lib/index.js!/var/www/work/foliovue/node_modules/vuetify-loader/lib/loader.js!/var/www/work/foliovue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/work/foliovue/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/work/foliovue/src/components/Contact.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/work/foliovue/src/components/Contact.vue","mtime":1559739968612},{"path":"/var/www/work/foliovue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/work/foliovue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/work/foliovue/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/var/www/work/foliovue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/work/foliovue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nconst axios = require('axios');\n\nconst qs = require('qs');\n\nexport default {\n  $_veeValidate: {\n    validator: 'new'\n  },\n\n  data() {\n    return {\n      name: '',\n      firstname: '',\n      email: '',\n      commentaires: '',\n      output: '',\n      dictionary: {\n        attributes: {\n          email: 'E-mail Address' // custom attributes\n\n        },\n        custom: {\n          name: {\n            required: () => 'Merci de renseigner un nom'\n          }\n        }\n      }\n    };\n  },\n\n  mounted() {\n    {\n      this.$validator.localize('fr', this.dictionary);\n    }\n  },\n\n  methods: {\n    submitForm() {\n      let currentObj = this; // this.$validator.validateAll()\n\n      this.axios.post('http://127.0.0.1:8000/api/v1/contacts', {\n        name: this.name,\n        firstname: this.firstname,\n        email: this.email,\n        commentaires: this.commentaires\n      }).then(response => currentObj.output = response.data);\n    },\n\n    clear() {\n      this.name = '';\n      this.firstname = '';\n      this.email = '';\n      this.commentaires = '';\n      this.$validator.reset();\n    }\n\n  }\n};",{"version":3,"sources":["Contact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,MAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,MAAA,EAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEA,eAAA;AACA,EAAA,aAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA,EAJA;AAKA,MAAA,MAAA,EAAA,EALA;AAOA,MAAA,UAAA,EAAA;AAEA,QAAA,UAAA,EAAA;AACA,UAAA,KAAA,EAAA,gBADA,CAEA;;AAFA,SAFA;AAOA,QAAA,MAAA,EAAA;AACA,UAAA,IAAA,EAAA;AACA,YAAA,QAAA,EAAA,MAAA;AADA;AADA;AAPA;AAPA,KAAA;AAqBA,GA3BA;;AA6BA,EAAA,OAAA,GAAA;AACA;AACA,WAAA,UAAA,CAAA,QAAA,CAAA,IAAA,EAAA,KAAA,UAAA;AACA;AAEA,GAlCA;;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,GAAA;AACA,UAAA,UAAA,GAAA,IAAA,CADA,CAEA;;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,uCAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA,IADA;AAEA,QAAA,SAAA,EAAA,KAAA,SAFA;AAGA,QAAA,KAAA,EAAA,KAAA,KAHA;AAIA,QAAA,YAAA,EAAA,KAAA;AAJA,OAAA,EAOA,IAPA,CAOA,QAAA,IAAA,UAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAPA;AAQA,KAZA;;AAaA,IAAA,KAAA,GAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,WAAA,SAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,UAAA,CAAA,KAAA;AACA;;AAnBA;AAnCA,CAAA","sourcesContent":["<template>\n    <v-container id=\"contact\">\n        <h3> Contact </h3>\n        <form\n                @submit=\"submitForm\"\n        >\n            <v-text-field\n                    v-model=\"name\"\n                    :error-messages=\"errors.collect('name')\"\n                    box\n                    label=\"Name\"\n                    data-vv-name=\"name\"\n                    required\n                    color=\"deep-purple\"\n            ></v-text-field>\n\n            <v-text-field\n                    v-model=\"firstname\"\n                    :error-messages=\"errors.collect('name')\"\n                    box\n                    label=\"Firstname\"\n                    data-vv-name=\"firstname\"\n                    required\n                    color=\"deep-purple\"\n            ></v-text-field>\n\n            <v-text-field\n                    v-model=\"email\"\n                    v-validate=\"'required|email'\"\n                    box\n                    :error-messages=\"errors.collect('email')\"\n                    label=\"E-mail\"\n                    data-vv-name=\"email\"\n                    required\n                    color=\"deep-purple\"\n            ></v-text-field>\n\n            <v-textarea\n                    v-model=\"commentaires\"\n                    auto-grow\n                    box\n                    color=\"deep-purple\"\n                    label=\"Commentaires\"\n                    rows=\"1\"\n            ></v-textarea>\n\n            <v-btn\n                    dark\n                    color=\"#705465\"\n            >\n                submit\n            </v-btn>\n\n            <v-btn\n                    @click=\"clear\"\n                    dark\n                    color=\"#705465\"\n            >\n                clear\n            </v-btn>\n        </form>\n    </v-container>\n</template>\n\n<script>\n\n    const axios = require('axios');\n    const qs = require('qs');\n\n    export default {\n        $_veeValidate: {\n            validator: 'new'\n        },\n\n        data() {\n            return {\n                name: '',\n                firstname: '',\n                email: '',\n                commentaires: '',\n                output: '',\n\n                dictionary: {\n\n                    attributes: {\n                        email: 'E-mail Address'\n                        // custom attributes\n                    },\n\n                    custom: {\n                        name: {\n                            required: () => 'Merci de renseigner un nom',\n                        },\n                    }\n                }\n            }\n        },\n\n        mounted() {\n            {\n                this.$validator.localize('fr', this.dictionary)\n            }\n\n        },\n        methods: {\n            submitForm() {\n                let currentObj = this;\n                // this.$validator.validateAll()\n                this.axios.post('http://127.0.0.1:8000/api/v1/contacts', {\n                    name           : this.name,\n                    firstname      : this.firstname,\n                    email          : this.email,\n                    commentaires   : this.commentaires\n                }\n                )\n                    .then(response => currentObj.output = response.data)\n            },\n            clear () {\n                this.name           = ''\n                this.firstname      = ''\n                this.email          = ''\n                this.commentaires   = ''\n                this.$validator.reset()\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    h3 {\n        font-family: AmaticFont, sans-serif;\n        font-size: 50px;\n        color: #705465;\n        padding: 90px;\n    }\n\n</style>"],"sourceRoot":"src/components"}]}