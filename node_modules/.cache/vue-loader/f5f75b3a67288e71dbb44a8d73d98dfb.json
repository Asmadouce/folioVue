{"remainingRequest":"/var/www/work/foliovue/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/work/foliovue/src/components/Contact.vue?vue&type=style&index=0&id=cf6573c0&scoped=true&lang=css&","dependencies":[{"path":"/var/www/work/foliovue/src/components/Contact.vue","mtime":1559573722796},{"path":"/var/www/work/foliovue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/var/www/work/foliovue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/work/foliovue/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/var/www/work/foliovue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/work/foliovue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh3 {\n    font-family: AmaticFont, sans-serif;\n    font-size: 50px;\n    color: #705465;\n    padding: 90px;\n}\n\n",{"version":3,"sources":["Contact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA","file":"Contact.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container id=\"contact\">\n        <h3> Contact </h3>\n        <form>\n            <v-text-field\n                    v-model=\"name\"\n                    v-validate=\"'required|max:100'\"\n                    :counter=\"100\"\n                    :error-messages=\"errors.collect('name')\"\n                    label=\"Name\"\n                    data-vv-name=\"name\"\n                    required\n            ></v-text-field>\n            <v-text-field\n                    v-model=\"email\"\n                    v-validate=\"'required|email'\"\n                    :error-messages=\"errors.collect('email')\"\n                    label=\"E-mail\"\n                    data-vv-name=\"email\"\n                    required\n            ></v-text-field>\n\n            <v-btn @click=\"submit\">submit</v-btn>\n            <v-btn @click=\"clear\">clear</v-btn>\n        </form>\n    </v-container>\n</template>\n\n<script>\n    const axios = require('axios');\n    export default {\n        $_veeValidate: {\n            validator: 'new'\n        },\n\n        data() {\n            return {\n                contact:[] ,\n                name: '',\n                email: '',\n\n                dictionary: {\n\n                    attributes: {\n                        email: 'E-mail Address'\n                        // custom attributes\n                    },\n\n                    custom: {\n                        name: {\n                            required: () => 'Name can not be empty',\n                            max: 'The name field may not be greater than 100 characters'\n                            // custom messages\n                        },\n                    }\n                }\n            }\n        },\n\n        mounted() {\n            {\n                axios\n                    .post(`http://127.0.0.1:8000/api/v1/contacts`)\n                    .then(response => (this.contact = response.data));\n                console.log(this.contact)\n            }\n            {\n                this.$validator.localize('en', this.dictionary)\n            }\n\n        },\n        methods: {\n            submit () {\n                this.$validator.validateAll()\n            },\n            clear () {\n                this.name = ''\n                this.email = ''\n                this.$validator.reset()\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    h3 {\n        font-family: AmaticFont, sans-serif;\n        font-size: 50px;\n        color: #705465;\n        padding: 90px;\n    }\n\n</style>"]}]}